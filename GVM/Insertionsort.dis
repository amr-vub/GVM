$ Generated by DISc 

CHUNK 0
$ Program entry and exit point
INST BGN 0 1
INST STP 1 

$ Starting subgraph insertion_sort
INST SNK 2 
INST RST 3 
INST CHN 4 4 1 0 20 0 5
INST SNK 5 

LINK 0 2 0 -> 1 0 0
LINK 0 2 0 -> 0 4 0
LINK 0 5 0 -> 0 3 0
LITR 4 1 <= []
LITR 4 2 <= 0
$ Leaving subgraph insertion_sort

$ Starting subgraph insertion_sort.insert_el
INST SNK 6 
INST RST 7 

$ Starting for...in
INST SNK 8 
INST SNK 9 
	LINK 0 8 0 -> 1 1 0
	LINK 0 8 1 -> 1 1 1
	LINK 0 8 2 -> 1 1 2
	LINK 0 8 0 -> 1 2 0
	LINK 0 8 1 -> 1 2 1
	LINK 0 8 2 -> 1 2 2
	LINK 0 8 0 -> 1 3 0
	LINK 0 8 1 -> 1 3 1
	LINK 0 8 2 -> 1 3 2
	$ Starting subgraph Generate
	
	$ Leaving subgraph Generate
	
	$ Starting subgraph body_4
	INST SNK 10 
	INST RST 11 
	
	LINK 0 10 0 -> 1 4 0
	LINK 0 10 2 -> 1 4 1
	$ Leaving subgraph body_4
	
	$ Starting subgraph body_5
	INST SNK 12 
	INST RST 13 
	
	LINK 0 12 0 -> 1 5 0
	LINK 0 12 2 -> 1 5 1
	$ Leaving subgraph body_5
	
	$ Starting subgraph body_6
	INST SNK 14 
	INST RST 15 
	
	LINK 0 14 0 -> 1 6 0
	LINK 0 14 2 -> 1 6 1
	$ Leaving subgraph body_6
	
	$ Starting subgraph Return
	
	$ Leaving subgraph Return
	
INST SWI 16 0 18 0 19
INST SNK 17 
	$ Starting subgraph 1
	INST SNK 18 
	
	LINK 0 18 1 -> 1 17 0
	LINK 0 18 2 -> 1 16 0
	LINK 0 18 3 -> 1 16 1
	LINK 0 18 4 -> 1 19 1
	$ Leaving subgraph 1
	
	$ Starting subgraph 2
	INST SNK 19 
	
	LINK 0 19 1 -> 1 20 0
	$ Leaving subgraph 2
	

LINK 0 6 0 -> 1 13 0
LINK 0 6 0 -> 0 8 1
LINK 0 6 0 -> 1 7 0
LINK 0 6 0 -> 1 8 0
LINK 0 6 0 -> 1 9 0
LINK 0 6 0 -> 0 8 0
LINK 0 6 1 -> 0 16 1
LINK 0 6 1 -> 0 8 2
LINK 0 9 0 -> 0 16 2
LINK 0 9 1 -> 0 16 3
LINK 0 9 2 -> 0 16 4
LINK 0 17 0 -> 0 7 0
$ Leaving subgraph insertion_sort.insert_el

$ Starting subgraph insertion_sort.inner_loop
INST SNK 20 
INST RST 21 
INST SWI 22 0 24 0 25
INST SNK 23 
	$ Starting subgraph 1
	INST SNK 24 
	
	LINK 0 24 1 -> 0 23 0
	$ Leaving subgraph 1
	
	$ Starting subgraph 2
	INST SNK 25 
	INST CHN 26 2 1 0 6 0 27
	INST SNK 27 
	INST CHN 28 4 1 0 20 0 29
	INST SNK 29 
	
	LINK 0 25 1 -> 0 26 0
	LINK 0 25 2 -> 1 23 0
	LINK 0 25 2 -> 0 28 0
	LINK 0 25 3 -> 1 23 1
	LINK 0 25 3 -> 1 24 0
	LINK 0 25 4 -> 0 28 3
	LINK 0 27 0 -> 0 28 1
	LINK 0 29 0 -> 0 23 0
	$ Leaving subgraph 2
	

LINK 0 20 0 -> 0 22 2
LINK 0 20 1 -> 0 22 1
LINK 0 20 2 -> 1 21 1
LINK 0 20 2 -> 0 22 3
LINK 0 20 3 -> 1 21 0
LINK 0 20 3 -> 0 22 4
LINK 0 23 0 -> 0 21 0
$ Leaving subgraph insertion_sort.inner_loop

$ Starting subgraph sort
INST SNK 30 
INST RST 31 
INST CHN 32 1 1 0 2 0 33
INST SNK 33 

LINK 0 30 0 -> 0 32 0
LINK 0 33 0 -> 0 31 0
$ Leaving subgraph sort

$ Starting subgraph main
INST SNK 34 
INST RST 35 
INST CHN 36 1 1 0 30 0 37
INST SNK 37 

LINK 0 34 0 -> 0 36 0
LINK 0 37 0 -> 0 35 0
$ Leaving subgraph main

$ Implicit call to main
INST CHN 38 1 1 0 34 0 1
LINK 0 0 0 -> 0 38 0

CHUNK 1
$ Starting subgraph insertion_sort
INST OPR 0 arrBound 1

LINK 1 0 0 -> 0 4 3
$ Leaving subgraph insertion_sort

$ Starting subgraph insertion_sort.insert_el

$ Starting for...in
	INST SPL 1 3 0 10 1 10
	INST SPL 2 3 0 12 1 11
	INST SPL 3 3 0 14 1 12
	$ Starting subgraph Generate
	
	$ Leaving subgraph Generate
	
	$ Starting subgraph body_4
	INST OPR 4 less 2
	
	LINK 1 4 0 -> 0 11 4
	$ Leaving subgraph body_4
	
	$ Starting subgraph body_5
	INST OPR 5 equals 2
	
	LINK 1 5 0 -> 0 13 5
	$ Leaving subgraph body_5
	
	$ Starting subgraph body_6
	INST OPR 6 more 2
	
	LINK 1 6 0 -> 0 15 6
	$ Leaving subgraph body_6
	
	$ Starting subgraph Return
	INST OPR 7 arrPrune 2
	INST OPR 8 arrPrune 2
	INST OPR 9 arrPrune 2
	INST OPR 10 array 0
	INST OPR 11 array 0
	INST OPR 12 array 0
	
	LINK 1 7 0 -> 0 9 0
	LINK 1 8 0 -> 0 9 1
	LINK 1 9 0 -> 0 9 2
	LINK 1 10 0 -> 1 7 1
	LINK 1 11 0 -> 1 8 1
	LINK 1 12 0 -> 1 9 1
	$ Leaving subgraph Return
	
INST OPR 13 arrLen 1
INST OPR 14 equals 2
INST OPR 15 int 1
	$ Starting subgraph 1
	INST OPR 16 arrCat 2
	INST OPR 17 array 1
	INST OPR 18 arrCat 2
	INST OPR 19 arrCat 2
	
	LINK 1 16 0 -> 1 18 0
	LINK 1 17 0 -> 1 18 1
	LINK 1 18 0 -> 1 19 0
	LINK 1 19 0 -> 0 17 0
	$ Leaving subgraph 1
	
	$ Starting subgraph 2
	INST OPR 20 array 1
	
	LINK 1 20 0 -> 0 17 0
	$ Leaving subgraph 2
	

LINK 1 13 0 -> 1 14 0
LINK 1 14 0 -> 1 15 0
LINK 1 15 0 -> 0 16 0
LITR 14 1 <= 0
$ Leaving subgraph insertion_sort.insert_el

$ Starting subgraph insertion_sort.inner_loop
INST OPR 21 moreEq 2
INST OPR 22 int 1
	$ Starting subgraph 1
	
	$ Leaving subgraph 1
	
	$ Starting subgraph 2
	INST OPR 23 arrGet 2
	INST OPR 24 add 2
	
	LINK 1 23 0 -> 0 26 1
	LINK 1 24 0 -> 0 28 2
	LITR 24 1 <= 1
	$ Leaving subgraph 2
	

LINK 1 21 0 -> 1 22 0
LINK 1 22 0 -> 0 22 0
$ Leaving subgraph insertion_sort.inner_loop

$ Starting subgraph sort

$ Leaving subgraph sort

$ Starting subgraph main

$ Leaving subgraph main


